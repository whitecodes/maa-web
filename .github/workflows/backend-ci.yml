name: Backend CI

on:
  push:
    branches: [ master ]
    paths-ignore:
      - "web/**"
  pull_request:
    branches: [ master ]
    paths-ignore:
      - "web/**"

jobs:

  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: 'stable'

    - name: Check out code
      uses: actions/checkout@v4

    - name: Get dependencies
      run: go mod download

    - name: Set environment variable for library path
      run: echo "LD_LIBRARY_PATH=\$LD_LIBRARY_PATH:\$(pwd)/lib" >> $GITHUB_ENV

    - name: Run go vet
      run: go vet ./...

    - name: Run tests
      env:
        LD_LIBRARY_PATH: ${{ env.LD_LIBRARY_PATH }}
      run: LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$(pwd)/lib go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
      continue-on-error: true  # 即使测试失败，依然会上传覆盖率报告

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.txt
        flags: unittests
        name: codecov-umbrella

    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v7
      with:
        version: latest

    - name: Check gofmt
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Go files are not formatted correctly. Please run 'gofmt -s -w .'"
          exit 1
        fi