name: Auto-merge Dependabot PRs

on:
  workflow_run:
    workflows: ["Dependabot Placeholder Check"]
    types: [completed]

permissions:
  pull-requests: write
  checks: read
  contents: read

jobs:
  auto-merge:
    name: Auto-merge PR if safe
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Get PR details from workflow_run
        id: get-pr
        uses: actions/github-script@v7
        with:
          result-encoding: string
          script: |
            const run = context.payload.workflow_run;

            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head: `${context.repo.owner}:${run.head_branch}`,
              state: 'open'
            });

            if (prs.length === 0) {
              core.setFailed('‚ùå No open PR found for this workflow run.');
              return;
            }

            const pr = prs[0];
            if (pr.user.login !== 'dependabot[bot]') {
              core.setFailed(`‚ùå Not a Dependabot PR. Author: ${pr.user.login}`);
              return;
            }

            return pr.number;

      - name: Wait for PR to be mergeable
        id: wait-mergeable
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ steps.get-pr.outputs.result }};
            const timeout = 30 * 60 * 1000;  // 30 min
            const interval = 30 * 1000;
            const start = Date.now();

            while (Date.now() - start < timeout) {
              const { data: pr } = await github.rest.pulls.get({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: prNumber
              });

              if (pr.mergeable_state === 'clean') {
                console.log('‚úÖ PR is mergeable (clean).');
                return;
              }

              console.log(`üïí Waiting for PR to become mergeable... (state: ${pr.mergeable_state})`);
              await new Promise(resolve => setTimeout(resolve, interval));
            }

            core.setFailed('‚ùå PR did not become mergeable within timeout.');

      - name: Merge PR using GitHub CLI
        uses: actions/setup-gh@v3

      - name: Merge PR (auto)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_number=${{ steps.get-pr.outputs.result }}
          gh pr merge $pr_number --merge --auto --delete-branch
